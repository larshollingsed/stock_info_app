{"ast":null,"code":"var _jsxFileName = \"/Users/larshollingsed/git/stock_info_app/src/App.js\";\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport companyList from './modules/comanyList.js';\nimport createTooltip from './modules/createTooltip.js';\nimport './App.css';\nimport 'antd/dist/antd.css';\nimport { AutoComplete, Alert } from 'antd';\nimport Chart from 'react-google-charts';\nconst base = 'https://cloud.iexapis.com/stable/stock';\nconst token = '/chart/1m?token=pk_0b61d9bd2072480cb885c51c1a47f59d';\n\nconst generateUrl = code => `${base}/${code}${token}`; // const tooltipStyle = '\"width: 150px; padding: 10px\"';\n\n\nconst App = () => {\n  const [search, setSearch] = useState('');\n  const [options, setOptions] = useState([]);\n  const [history, setHistory] = useState([]);\n  const [stockName, setStockName] = useState('');\n  const [error, setError] = useState();\n  useEffect(() => {\n    let matches = [];\n\n    if (search.length) {\n      matches = companyList.filter(company => company.lowerName.includes(search) || company.lowerSymbol.includes(search));\n    }\n\n    setOptions(matches);\n  }, [search]);\n\n  const onSearch = value => {\n    const searchInput = value.toLowerCase();\n    setSearch(searchInput);\n  };\n\n  const onSelect = value => setSearch(value);\n\n  const checkStock = async () => {\n    setError(undefined);\n    setHistory([]);\n\n    try {\n      const resp = await axios.get(generateUrl(search));\n      setHistory(parseData(resp.data));\n      const name = companyList.find(company => company.lowerSymbol === search).name;\n      setStockName(name);\n    } catch (err) {\n      setError('Invalid Symbol');\n    }\n  };\n\n  const parseData = stocks => {\n    return stocks.map(stock => [stock.date, stock.low, stock.close, stock.open, stock.high, createTooltip(stock)]);\n  };\n\n  return React.createElement(\"div\", {\n    className: \"App\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, React.createElement(AutoComplete, {\n    onSearch: onSearch,\n    value: search,\n    style: {\n      width: '300px'\n    },\n    onSelect: onSelect,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, options.map(option => React.createElement(AutoComplete.Option, {\n    key: option.lowerSymbol,\n    value: option.lowerSymbol,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, `${option.symbol} - ${option.name}`))), React.createElement(\"button\", {\n    onClick: checkStock,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, \"Check Stock\"), error && React.createElement(Alert, {\n    message: \"This stock symbol does not exist\",\n    type: \"error\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }), !!history.length && React.createElement(Chart, {\n    width: '100%',\n    height: 350,\n    chartType: \"CandlestickChart\",\n    loader: React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, \"Loading Chart\"),\n    data: [[{\n      type: 'string',\n      id: 'Date'\n    }, {\n      type: 'number',\n      label: 'Low'\n    }, {\n      type: 'number',\n      label: 'Close'\n    }, {\n      type: 'number',\n      label: 'Open'\n    }, {\n      type: 'number',\n      label: 'High'\n    }, {\n      type: 'string',\n      label: 'Tooltip',\n      role: 'tooltip',\n      p: {\n        html: true\n      }\n    }], ...history],\n    options: {\n      legend: 'none',\n      candlestick: {\n        fallingColor: {\n          strokeWidth: 0,\n          fill: '#a52714'\n        },\n        risingColor: {\n          strokeWidth: 0,\n          fill: '#0f9d58'\n        }\n      },\n      hAxis: {\n        title: 'Date',\n        titleTextStyle: {\n          bold: true,\n          italic: false\n        }\n      },\n      title: stockName,\n      titleTextStyle: {\n        bold: true,\n        fontSize: 24\n      },\n      tooltip: {\n        isHtml: true\n      },\n      vAxis: {\n        title: 'Price',\n        titleTextStyle: {\n          bold: true,\n          italic: false\n        }\n      }\n    },\n    rootProps: {\n      'data-testid': '1'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }));\n};\n\nexport default App;","map":{"version":3,"sources":["/Users/larshollingsed/git/stock_info_app/src/App.js"],"names":["React","useEffect","useState","axios","companyList","createTooltip","AutoComplete","Alert","Chart","base","token","generateUrl","code","App","search","setSearch","options","setOptions","history","setHistory","stockName","setStockName","error","setError","matches","length","filter","company","lowerName","includes","lowerSymbol","onSearch","value","searchInput","toLowerCase","onSelect","checkStock","undefined","resp","get","parseData","data","name","find","err","stocks","map","stock","date","low","close","open","high","width","option","symbol","type","id","label","role","p","html","legend","candlestick","fallingColor","strokeWidth","fill","risingColor","hAxis","title","titleTextStyle","bold","italic","fontSize","tooltip","isHtml","vAxis"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport companyList from './modules/comanyList.js';\nimport createTooltip from './modules/createTooltip.js';\nimport './App.css';\nimport 'antd/dist/antd.css'\nimport { AutoComplete, Alert } from 'antd';\nimport Chart from 'react-google-charts';\n\nconst base = 'https://cloud.iexapis.com/stable/stock';\nconst token = '/chart/1m?token=pk_0b61d9bd2072480cb885c51c1a47f59d';\nconst generateUrl = (code) => `${base}/${code}${token}`;\n\n// const tooltipStyle = '\"width: 150px; padding: 10px\"';\n\nconst App = () => {\n  const [search, setSearch] = useState('');\n  const [options, setOptions] = useState([]);\n  const [history, setHistory] = useState([]);\n  const [stockName, setStockName] = useState('');\n  const [error, setError] = useState();\n\n  useEffect(() => {\n    let matches = [];\n    if (search.length) {\n      matches = companyList.filter(\n        company => company.lowerName.includes(search) ||\n        company.lowerSymbol.includes(search)\n      );\n    }\n\n    setOptions(matches);\n  }, [search])\n\n  const onSearch = (value) => {\n    const searchInput = value.toLowerCase();\n    setSearch(searchInput);\n  };\n\n  const onSelect = value => setSearch(value);\n\n  const checkStock = async () => {\n    setError(undefined);\n    setHistory([]);\n    try {\n      const resp = await axios.get(generateUrl(search));\n      setHistory(parseData(resp.data));\n      const name = companyList.find(company => company.lowerSymbol === search).name;\n      setStockName(name);\n    }\n    catch(err) {\n      setError('Invalid Symbol');\n    }\n  }\n\n  const parseData = (stocks) => {\n\n    return stocks.map((stock) => (\n      [stock.date, stock.low, stock.close, stock.open, stock.high, createTooltip(stock)]\n    ));\n  }\n\n  return (\n    <div className='App'>\n      <AutoComplete\n        onSearch={onSearch}\n        value={search}\n        style={{ width: '300px' }}\n        onSelect={onSelect}\n      >\n        {options.map(option => (\n          <AutoComplete.Option key={option.lowerSymbol} value={option.lowerSymbol}>\n            {`${option.symbol} - ${option.name}`}\n          </AutoComplete.Option>\n        ))}\n      </AutoComplete>\n      <button onClick={checkStock}>Check Stock</button>\n      {error && <Alert message=\"This stock symbol does not exist\" type=\"error\" />}\n      {!!history.length && <Chart\n        width={'100%'}\n        height={350}\n        chartType='CandlestickChart'\n        loader={<div>Loading Chart</div>}\n        data={[\n          [\n            { type: 'string', id: 'Date' },\n            { type: 'number', label: 'Low' },\n            { type: 'number', label: 'Close' },\n            { type: 'number', label: 'Open' },\n            { type: 'number', label: 'High'  },\n            { type: 'string', label: 'Tooltip', role: 'tooltip', p: { html: true } },\n          ],\n          ...history,\n        ]}\n        options={{\n          legend: 'none',\n          candlestick: {\n            fallingColor: { strokeWidth: 0, fill: '#a52714' },\n            risingColor: { strokeWidth: 0, fill: '#0f9d58' },\n          },\n          hAxis: {\n            title: 'Date',\n            titleTextStyle: {\n              bold: true,\n              italic: false,\n            },\n          },\n          title: stockName,\n          titleTextStyle: {\n            bold: true,\n            fontSize: 24,\n          },\n          tooltip: {\n            isHtml: true,\n          },\n          vAxis: {\n            title: 'Price',\n            titleTextStyle: {\n              bold: true,\n              italic: false,\n            },\n          },\n        }}\n        rootProps={{ 'data-testid': '1' }}\n      />}\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}