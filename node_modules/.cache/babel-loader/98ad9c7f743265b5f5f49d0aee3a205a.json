{"ast":null,"code":"var _jsxFileName = \"/Users/larshollingsed/git/stock_info_app/src/App.js\";\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport companyList from './modules/comanyList.js';\nimport './App.css';\nimport 'antd/dist/antd.css';\nimport { AutoComplete } from 'antd';\nimport Chart from 'react-google-charts';\nconst base = 'https://cloud.iexapis.com/stable/stock';\nconst token = '/chart/1m?token=pk_0b61d9bd2072480cb885c51c1a47f59d';\n\nconst generateUrl = code => `${base}/${code}${token}`;\n\nconst getDailyAvgs = ({\n  data\n}) => data.map(({\n  open,\n  close,\n  high,\n  low\n}) => parseFloat(((open + close + high + low) / 4).toFixed(2)));\n\nconst App = () => {\n  const [search, setSearch] = useState('');\n  const [options, setOptions] = useState([]);\n  const [history, setHistory] = useState([]);\n  useEffect(() => {\n    let matches = [];\n\n    if (search.length) {\n      matches = companyList.filter(company => company.lowerName.includes(search) || company.lowerSymbol.includes(search));\n    }\n\n    setOptions(matches);\n  }, [search]);\n\n  const onSearch = value => {\n    const searchInput = value.toLowerCase();\n    setSearch(searchInput);\n  };\n\n  const onSelect = value => setSearch(value);\n\n  const checkStock = async () => {\n    const resp = await axios.get(generateUrl(search));\n    setHistory(parseData(resp.data)); // setDailyAvgs(getDailyAvgs(resp));\n    // console.log(getDailyAvgs(resp));\n  };\n\n  const parseData = stocks => {\n    return stocks.map(stock => [stock.date, stock.low, stock.close, stock.open, stock.high]);\n  };\n\n  return React.createElement(\"div\", {\n    className: \"App\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, React.createElement(AutoComplete, {\n    onSearch: onSearch,\n    value: search,\n    style: {\n      width: '300px'\n    },\n    onSelect: onSelect,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, options.map(option => React.createElement(AutoComplete.Option, {\n    key: option.lowerSymbol,\n    value: option.lowerSymbol,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, `${option.symbol} - ${option.name}`))), React.createElement(\"button\", {\n    onClick: checkStock,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, \"Check Stock\"), history.length && React.createElement(Chart, {\n    width: '100%',\n    height: 350,\n    chartType: \"CandlestickChart\",\n    loader: React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, \"Loading Chart\"),\n    data: [['day', 'a', 'b', 'c', 'd', 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21], history],\n    options: {\n      legend: 'none'\n    },\n    rootProps: {\n      'data-testid': '1'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }));\n};\n\nexport default App;","map":{"version":3,"sources":["/Users/larshollingsed/git/stock_info_app/src/App.js"],"names":["React","useEffect","useState","axios","companyList","AutoComplete","Chart","base","token","generateUrl","code","getDailyAvgs","data","map","open","close","high","low","parseFloat","toFixed","App","search","setSearch","options","setOptions","history","setHistory","matches","length","filter","company","lowerName","includes","lowerSymbol","onSearch","value","searchInput","toLowerCase","onSelect","checkStock","resp","get","parseData","stocks","stock","date","width","option","symbol","name","legend"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport companyList from './modules/comanyList.js';\nimport './App.css';\nimport 'antd/dist/antd.css'\nimport { AutoComplete } from 'antd';\nimport Chart from 'react-google-charts';\n\nconst base = 'https://cloud.iexapis.com/stable/stock';\nconst token = '/chart/1m?token=pk_0b61d9bd2072480cb885c51c1a47f59d';\nconst generateUrl = (code) => `${base}/${code}${token}`;\n\nconst getDailyAvgs = ({ data }) => (\n  data.map(({ open, close, high, low }) => (\n    parseFloat(((open + close + high + low) / 4).toFixed(2))\n  ))\n);\n\nconst App = () => {\n  const [search, setSearch] = useState('');\n  const [options, setOptions] = useState([]);\n  const [history, setHistory] = useState([]);\n\n  useEffect(() => {\n    let matches = [];\n    if (search.length) {\n      matches = companyList.filter(\n        company => company.lowerName.includes(search) ||\n        company.lowerSymbol.includes(search)\n      );\n    }\n\n    setOptions(matches);\n  }, [search])\n\n  const onSearch = (value) => {\n    const searchInput = value.toLowerCase();\n    setSearch(searchInput);\n  };\n\n  const onSelect = value => setSearch(value);\n\n  const checkStock = async () => {\n    const resp = await axios.get(generateUrl(search));\n    setHistory(parseData(resp.data));\n    // setDailyAvgs(getDailyAvgs(resp));\n    // console.log(getDailyAvgs(resp));\n  }\n\n  const parseData = (stocks) => {\n    return stocks.map((stock) => [stock.date, stock.low, stock.close, stock.open, stock.high])\n  }\n\n\n\n  return (\n    <div className=\"App\">\n      <AutoComplete\n        onSearch={onSearch}\n        value={search}\n        style={{ width: '300px' }}\n        onSelect={onSelect}\n      >\n        {options.map(option => (\n          <AutoComplete.Option key={option.lowerSymbol} value={option.lowerSymbol}>\n            {`${option.symbol} - ${option.name}`}\n          </AutoComplete.Option>\n        ))}\n      </AutoComplete>\n      <button onClick={checkStock}>Check Stock</button>\n      {history.length && <Chart\n        width={'100%'}\n        height={350}\n        chartType=\"CandlestickChart\"\n        loader={<div>Loading Chart</div>}\n        data={[\n          ['day', 'a', 'b', 'c', 'd', 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21],\n          history,\n        ]}\n        options={{\n          legend: 'none',\n        }}\n        rootProps={{ 'data-testid': '1' }}\n      />}\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}