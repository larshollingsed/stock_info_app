{"ast":null,"code":"var _jsxFileName = \"/Users/larshollingsed/git/stock_info_app/src/App.js\";\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport companyList from './modules/comanyList.js';\nimport './App.css';\nimport 'antd/dist/antd.css';\nimport { AutoComplete } from 'antd';\nimport Chart from 'react-google-charts';\nconst base = 'https://cloud.iexapis.com/stable/stock';\nconst token = '/chart/1m?token=pk_0b61d9bd2072480cb885c51c1a47f59d';\n\nconst generateUrl = code => `${base}/${code}${token}`;\n\nconst getDailyAvgs = ({\n  data\n}) => data.map(({\n  open,\n  close,\n  high,\n  low\n}) => parseFloat(((open + close + high + low) / 4).toFixed(2)));\n\nconst App = () => {\n  const [search, setSearch] = useState('');\n  const [options, setOptions] = useState([]);\n  const [history, setHistory] = useState([]);\n  const [stockName, setStockName] = useState('');\n  useEffect(() => {\n    let matches = [];\n\n    if (search.length) {\n      matches = companyList.filter(company => company.lowerName.includes(search) || company.lowerSymbol.includes(search));\n    }\n\n    setOptions(matches);\n  }, [search]);\n\n  const onSearch = value => {\n    const searchInput = value.toLowerCase();\n    setSearch(searchInput);\n  };\n\n  const onSelect = value => setSearch(value);\n\n  const checkStock = async () => {\n    const resp = await axios.get(generateUrl(search));\n    setHistory(parseData(resp.data));\n    const name = companyList.find(company => company.lowerSymbol === search).name;\n    setStockName(name);\n  };\n\n  const parseData = stocks => {\n    return stocks.map(stock => {\n      const tooltip = React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, stock.date));\n      return [stock.date, stock.low, stock.close, stock.open, stock.high, tooltip];\n    });\n  };\n\n  return React.createElement(\"div\", {\n    className: \"App\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, React.createElement(AutoComplete, {\n    onSearch: onSearch,\n    value: search,\n    style: {\n      width: '300px'\n    },\n    onSelect: onSelect,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, options.map(option => React.createElement(AutoComplete.Option, {\n    key: option.lowerSymbol,\n    value: option.lowerSymbol,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, `${option.symbol} - ${option.name}`))), React.createElement(\"button\", {\n    onClick: checkStock,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, \"Check Stock\"), history.length && React.createElement(Chart, {\n    width: '100%',\n    height: 350,\n    chartType: \"CandlestickChart\",\n    loader: React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, \"Loading Chart\"),\n    data: [[{\n      type: 'string',\n      id: 'Date'\n    }, {\n      type: 'number',\n      label: 'Low'\n    }, {\n      type: 'number',\n      label: 'Close'\n    }, {\n      type: 'number',\n      label: 'Open'\n    }, {\n      type: 'number',\n      label: 'High'\n    }, {\n      type: 'String',\n      label: 'Tooltip',\n      role: 'tooltip',\n      p: {\n        html: true\n      }\n    }], ...history],\n    options: {\n      legend: 'none',\n      candlestick: {\n        fallingColor: {\n          strokeWidth: 0,\n          fill: '#a52714'\n        },\n        risingColor: {\n          strokeWidth: 0,\n          fill: '#0f9d58'\n        }\n      },\n      hAxis: {\n        title: 'Date',\n        titleTextStyle: {\n          bold: true,\n          italic: false\n        }\n      },\n      title: stockName,\n      titleTextStyle: {\n        bold: true,\n        fontSize: 24\n      },\n      tooltip: {\n        showColorCode: true,\n        isHtml: true\n      },\n      vAxis: {\n        title: 'Price',\n        titleTextStyle: {\n          bold: true,\n          italic: false\n        }\n      }\n    },\n    rootProps: {\n      'data-testid': '1'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }));\n};\n\nexport default App;","map":{"version":3,"sources":["/Users/larshollingsed/git/stock_info_app/src/App.js"],"names":["React","useEffect","useState","axios","companyList","AutoComplete","Chart","base","token","generateUrl","code","getDailyAvgs","data","map","open","close","high","low","parseFloat","toFixed","App","search","setSearch","options","setOptions","history","setHistory","stockName","setStockName","matches","length","filter","company","lowerName","includes","lowerSymbol","onSearch","value","searchInput","toLowerCase","onSelect","checkStock","resp","get","parseData","name","find","stocks","stock","tooltip","date","width","option","symbol","type","id","label","role","p","html","legend","candlestick","fallingColor","strokeWidth","fill","risingColor","hAxis","title","titleTextStyle","bold","italic","fontSize","showColorCode","isHtml","vAxis"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport companyList from './modules/comanyList.js';\nimport './App.css';\nimport 'antd/dist/antd.css'\nimport { AutoComplete } from 'antd';\nimport Chart from 'react-google-charts';\n\nconst base = 'https://cloud.iexapis.com/stable/stock';\nconst token = '/chart/1m?token=pk_0b61d9bd2072480cb885c51c1a47f59d';\nconst generateUrl = (code) => `${base}/${code}${token}`;\n\nconst getDailyAvgs = ({ data }) => (\n  data.map(({ open, close, high, low }) => (\n    parseFloat(((open + close + high + low) / 4).toFixed(2))\n  ))\n);\n\nconst App = () => {\n  const [search, setSearch] = useState('');\n  const [options, setOptions] = useState([]);\n  const [history, setHistory] = useState([]);\n  const [stockName, setStockName] = useState('');\n\n  useEffect(() => {\n    let matches = [];\n    if (search.length) {\n      matches = companyList.filter(\n        company => company.lowerName.includes(search) ||\n        company.lowerSymbol.includes(search)\n      );\n    }\n\n    setOptions(matches);\n  }, [search])\n\n  const onSearch = (value) => {\n    const searchInput = value.toLowerCase();\n    setSearch(searchInput);\n  };\n\n  const onSelect = value => setSearch(value);\n\n  const checkStock = async () => {\n    const resp = await axios.get(generateUrl(search));\n    setHistory(parseData(resp.data));\n    const name = companyList.find(company => company.lowerSymbol === search).name;\n    setStockName(name);\n  }\n\n  const parseData = (stocks) => {\n\n    return stocks.map((stock) => {\n      const tooltip = (\n        <div>\n          <div>\n            {stock.date}\n          </div>\n        </div>\n      );\n      return [stock.date, stock.low, stock.close, stock.open, stock.high, tooltip]\n    })\n  }\n\n  return (\n    <div className='App'>\n      <AutoComplete\n        onSearch={onSearch}\n        value={search}\n        style={{ width: '300px' }}\n        onSelect={onSelect}\n      >\n        {options.map(option => (\n          <AutoComplete.Option key={option.lowerSymbol} value={option.lowerSymbol}>\n            {`${option.symbol} - ${option.name}`}\n          </AutoComplete.Option>\n        ))}\n      </AutoComplete>\n      <button onClick={checkStock}>Check Stock</button>\n      {history.length && <Chart\n        width={'100%'}\n        height={350}\n        chartType='CandlestickChart'\n        loader={<div>Loading Chart</div>}\n        data={[\n          [\n            { type: 'string', id: 'Date' },\n            { type: 'number', label: 'Low' },\n            { type: 'number', label: 'Close' },\n            { type: 'number', label: 'Open' },\n            { type: 'number', label: 'High'  },\n            { type: 'String', label: 'Tooltip', role: 'tooltip', p: { html: true } },\n          ],\n          ...history,\n        ]}\n        options={{\n          legend: 'none',\n          candlestick: {\n            fallingColor: { strokeWidth: 0, fill: '#a52714' },\n            risingColor: { strokeWidth: 0, fill: '#0f9d58' },\n          },\n          hAxis: {\n            title: 'Date',\n            titleTextStyle: {\n              bold: true,\n              italic: false,\n            },\n          },\n          title: stockName,\n          titleTextStyle: {\n            bold: true,\n            fontSize: 24,\n          },\n          tooltip: {\n            showColorCode: true,\n            isHtml: true,\n          },\n          vAxis: {\n            title: 'Price',\n            titleTextStyle: {\n              bold: true,\n              italic: false,\n            },\n          },\n        }}\n        rootProps={{ 'data-testid': '1' }}\n      />}\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}