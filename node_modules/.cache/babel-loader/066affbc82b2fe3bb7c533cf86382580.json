{"ast":null,"code":"var _jsxFileName = \"/Users/larshollingsed/git/stock_info_app/src/App.js\";\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport companyList from './modules/comanyList.js';\nimport './App.css';\nimport 'antd/dist/antd.css';\nimport { AutoComplete } from 'antd';\nconst base = 'https://cloud.iexapis.com/stable/stock';\nconst token = '/chart/1m?token=pk_0b61d9bd2072480cb885c51c1a47f59d';\n\nconst generateUrl = code => `${base}/${code}${token}`;\n\nconst getDailyAvgs = ({\n  data\n}) => data.map(({\n  open,\n  close,\n  high,\n  low\n}) => parseFloat(((open + close + high + low) / 4).toFixed(2)));\n\nconst App = () => {\n  const [search, setSearch] = useState('');\n  const [options, setOptions] = useState([]);\n  const [dailyAvgs, setDailyAvgs] = useState([]);\n  useEffect(() => {\n    const matches = companyList.filter(company => company.lowerName.includes(search) || company.lowerSymbol.includes(search));\n    setOptions(matches);\n  }, [search]);\n\n  const updateSearch = value => {\n    const searchInput = value.toLowerCase();\n    setSearch(searchInput);\n  };\n\n  const checkStock = async () => {\n    const resp = await axios.get(generateUrl(search));\n    setDailyAvgs(getDailyAvgs(resp));\n    console.log(getDailyAvgs(resp));\n  };\n\n  return React.createElement(\"div\", {\n    className: \"App\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, React.createElement(AutoComplete, {\n    onSearch: updateSearch,\n    value: search,\n    style: {\n      width: '300px'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, options.map(option => React.createElement(AutoComplete.Option, {\n    key: option.symbol,\n    value: option.symbol,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, `${option.symbol} - ${option.name}`))), React.createElement(\"button\", {\n    onClick: checkStock,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, \"Check Stock\"), dailyAvgs && dailyAvgs.map(avg => React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, avg)));\n};\n\nexport default App;","map":{"version":3,"sources":["/Users/larshollingsed/git/stock_info_app/src/App.js"],"names":["React","useEffect","useState","axios","companyList","AutoComplete","base","token","generateUrl","code","getDailyAvgs","data","map","open","close","high","low","parseFloat","toFixed","App","search","setSearch","options","setOptions","dailyAvgs","setDailyAvgs","matches","filter","company","lowerName","includes","lowerSymbol","updateSearch","value","searchInput","toLowerCase","checkStock","resp","get","console","log","width","option","symbol","name","avg"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport companyList from './modules/comanyList.js';\nimport './App.css';\nimport 'antd/dist/antd.css'\nimport { AutoComplete } from 'antd';\n\nconst base = 'https://cloud.iexapis.com/stable/stock';\nconst token = '/chart/1m?token=pk_0b61d9bd2072480cb885c51c1a47f59d';\nconst generateUrl = (code) => `${base}/${code}${token}`;\n\nconst getDailyAvgs = ({ data }) => (\n  data.map(({ open, close, high, low }) => (\n    parseFloat(((open + close + high + low) / 4).toFixed(2))\n  ))\n);\n\nconst App = () => {\n  const [search, setSearch] = useState('');\n  const [options, setOptions] = useState([]);\n  const [dailyAvgs, setDailyAvgs] = useState([]);\n\n  useEffect(() => {\n    const matches = companyList.filter(\n      company => company.lowerName.includes(search) ||\n      company.lowerSymbol.includes(search)\n    );\n\n    setOptions(matches);\n  }, [search])\n\n  const updateSearch = (value) => {\n    const searchInput = value.toLowerCase();\n    setSearch(searchInput);\n  };\n\n  const checkStock = async () => {\n    const resp = await axios.get(generateUrl(search));\n    setDailyAvgs(getDailyAvgs(resp));\n    console.log(getDailyAvgs(resp));\n  }\n\n  return (\n    <div className=\"App\">\n      <AutoComplete onSearch={updateSearch} value={search} style={{ width: '300px' }}>\n        {options.map(option => (\n          <AutoComplete.Option key={option.symbol} value={option.symbol}>\n            {`${option.symbol} - ${option.name}`}\n          </AutoComplete.Option>\n        ))}\n      </AutoComplete>\n      <button onClick={checkStock}>Check Stock</button>\n      {dailyAvgs && dailyAvgs.map(avg => (\n        <div>\n          {avg}\n        </div>\n      ))}\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}