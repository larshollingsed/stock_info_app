{"ast":null,"code":"var _jsxFileName = \"/Users/larshollingsed/git/stock_info_app/src/App.js\";\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport companyList from './modules/';\nimport './App.css';\nconst base = 'https://cloud.iexapis.com/stable/stock';\nconst token = '/chart/1m?token=pk_0b61d9bd2072480cb885c51c1a47f59d';\n\nconst generateUrl = code => `${base}/${code}${token}`;\n\nconst getDailyAvgs = ({\n  data\n}) => data.map(({\n  open,\n  close,\n  high,\n  low\n}) => parseFloat(((open + close + high + low) / 4).toFixed(2)));\n\nconst App = () => {\n  const [search, setSearch] = useState('');\n  const [dailyAvgs, setDailyAvgs] = useState([]);\n  useEffect(() => {\n    const found = companyList.filter(company => company.name.toLowerCase().includes(search) || company.symbol.toLowerCase().includes(search));\n    console.log(found);\n  }, [search]);\n\n  const updateSearch = e => setSearch(e.target.value.toLowerCase());\n\n  const checkStock = async () => {\n    const resp = await axios.get(generateUrl(search));\n    setDailyAvgs(getDailyAvgs(resp));\n    console.log(getDailyAvgs(resp));\n  };\n\n  return React.createElement(\"div\", {\n    className: \"App\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    onChange: updateSearch,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    onClick: checkStock,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, \"Check Stock\"), dailyAvgs && dailyAvgs.map(avg => React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, avg)));\n};\n\nexport default App;","map":{"version":3,"sources":["/Users/larshollingsed/git/stock_info_app/src/App.js"],"names":["React","useEffect","useState","axios","companyList","base","token","generateUrl","code","getDailyAvgs","data","map","open","close","high","low","parseFloat","toFixed","App","search","setSearch","dailyAvgs","setDailyAvgs","found","filter","company","name","toLowerCase","includes","symbol","console","log","updateSearch","e","target","value","checkStock","resp","get","avg"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,WAAP,MAAwB,YAAxB;AACA,OAAO,WAAP;AAEA,MAAMC,IAAI,GAAG,wCAAb;AACA,MAAMC,KAAK,GAAG,qDAAd;;AACA,MAAMC,WAAW,GAAIC,IAAD,IAAW,GAAEH,IAAK,IAAGG,IAAK,GAAEF,KAAM,EAAtD;;AAEA,MAAMG,YAAY,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KACnBA,IAAI,CAACC,GAAL,CAAS,CAAC;AAAEC,EAAAA,IAAF;AAAQC,EAAAA,KAAR;AAAeC,EAAAA,IAAf;AAAqBC,EAAAA;AAArB,CAAD,KACPC,UAAU,CAAC,CAAC,CAACJ,IAAI,GAAGC,KAAP,GAAeC,IAAf,GAAsBC,GAAvB,IAA8B,CAA/B,EAAkCE,OAAlC,CAA0C,CAA1C,CAAD,CADZ,CADF;;AAMA,MAAMC,GAAG,GAAG,MAAM;AAChB,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBlB,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAACmB,SAAD,EAAYC,YAAZ,IAA4BpB,QAAQ,CAAC,EAAD,CAA1C;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMsB,KAAK,GAAGnB,WAAW,CAACoB,MAAZ,CAAmBC,OAAO,IAAIA,OAAO,CAACC,IAAR,CAAaC,WAAb,GAA2BC,QAA3B,CAAoCT,MAApC,KAA+CM,OAAO,CAACI,MAAR,CAAeF,WAAf,GAA6BC,QAA7B,CAAsCT,MAAtC,CAA7E,CAAd;AACAW,IAAAA,OAAO,CAACC,GAAR,CAAYR,KAAZ;AACD,GAHQ,EAGN,CAACJ,MAAD,CAHM,CAAT;;AAKA,QAAMa,YAAY,GAAGC,CAAC,IAAIb,SAAS,CAACa,CAAC,CAACC,MAAF,CAASC,KAAT,CAAeR,WAAf,EAAD,CAAnC;;AAEA,QAAMS,UAAU,GAAG,YAAY;AAC7B,UAAMC,IAAI,GAAG,MAAMlC,KAAK,CAACmC,GAAN,CAAU/B,WAAW,CAACY,MAAD,CAArB,CAAnB;AACAG,IAAAA,YAAY,CAACb,YAAY,CAAC4B,IAAD,CAAb,CAAZ;AACAP,IAAAA,OAAO,CAACC,GAAR,CAAYtB,YAAY,CAAC4B,IAAD,CAAxB;AACD,GAJD;;AAMA,SACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAO,IAAA,QAAQ,EAAEL,YAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE;AAAQ,IAAA,OAAO,EAAEI,UAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAFF,EAGGf,SAAS,IAAIA,SAAS,CAACV,GAAV,CAAc4B,GAAG,IAC7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGA,GADH,CADY,CAHhB,CADF;AAWD,CA5BD;;AA8BA,eAAerB,GAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport companyList from './modules/';\nimport './App.css';\n\nconst base = 'https://cloud.iexapis.com/stable/stock';\nconst token = '/chart/1m?token=pk_0b61d9bd2072480cb885c51c1a47f59d';\nconst generateUrl = (code) => `${base}/${code}${token}`;\n\nconst getDailyAvgs = ({ data }) => (\n  data.map(({ open, close, high, low }) => (\n    parseFloat(((open + close + high + low) / 4).toFixed(2))\n  ))\n);\n\nconst App = () => {\n  const [search, setSearch] = useState('');\n  const [dailyAvgs, setDailyAvgs] = useState([]);\n\n  useEffect(() => {\n    const found = companyList.filter(company => company.name.toLowerCase().includes(search) || company.symbol.toLowerCase().includes(search));\n    console.log(found);\n  }, [search])\n\n  const updateSearch = e => setSearch(e.target.value.toLowerCase());\n\n  const checkStock = async () => {\n    const resp = await axios.get(generateUrl(search));\n    setDailyAvgs(getDailyAvgs(resp));\n    console.log(getDailyAvgs(resp));\n  }\n\n  return (\n    <div className=\"App\">\n      <input onChange={updateSearch} />\n      <button onClick={checkStock}>Check Stock</button>\n      {dailyAvgs && dailyAvgs.map(avg => (\n        <div>\n          {avg}\n        </div>\n      ))}\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}